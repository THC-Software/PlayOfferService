// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayOfferService.Domain;
using PlayOfferService.Repositories;

#nullable disable

namespace PlayOfferService.Migrations
{
    [DbContext(typeof(DbWriteContext))]
    [Migration("20240430143152_ChangedNamingConventionToCamelCase")]
    partial class ChangedNamingConventionToCamelCase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PlayOfferService.Domain.Events.BaseEvent<PlayOfferService.Domain.Events.IDomainEvent>", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("char(36)")
                        .HasColumnName("eventId");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("char(36)")
                        .HasColumnName("entityId");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("entityType");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("eventData");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("eventType");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("timestamp");

                    b.HasKey("EventId")
                        .HasName("pK_Events");

                    b.ToTable("Events", (string)null);
                });

            modelBuilder.Entity("PlayOfferService.Models.Club", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pK_clubs");

                    b.ToTable("clubs", (string)null);
                });

            modelBuilder.Entity("PlayOfferService.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("ClubId")
                        .HasColumnType("char(36)")
                        .HasColumnName("clubId");

                    b.HasKey("Id")
                        .HasName("pK_members");

                    b.HasIndex("ClubId")
                        .HasDatabaseName("iX_members_clubId");

                    b.ToTable("members", (string)null);
                });

            modelBuilder.Entity("PlayOfferService.Models.PlayOffer", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("AcceptedStartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("acceptedStartTime");

                    b.Property<Guid>("ClubId")
                        .HasColumnType("char(36)")
                        .HasColumnName("clubId");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("char(36)")
                        .HasColumnName("creatorId");

                    b.Property<Guid?>("OpponentId")
                        .HasColumnType("char(36)")
                        .HasColumnName("opponentId");

                    b.Property<DateTime>("ProposedEndTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("proposedEndTime");

                    b.Property<DateTime>("ProposedStartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("proposedStartTime");

                    b.Property<Guid?>("ReservationId")
                        .HasColumnType("char(36)")
                        .HasColumnName("reservationId");

                    b.HasKey("Id")
                        .HasName("pK_playOffers");

                    b.HasIndex("ClubId")
                        .HasDatabaseName("iX_playOffers_clubId");

                    b.HasIndex("CreatorId")
                        .HasDatabaseName("iX_playOffers_creatorId");

                    b.HasIndex("OpponentId")
                        .HasDatabaseName("iX_playOffers_opponentId");

                    b.HasIndex("ReservationId")
                        .HasDatabaseName("iX_playOffers_reservationId");

                    b.ToTable("playOffers", (string)null);
                });

            modelBuilder.Entity("PlayOfferService.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pK_reservations");

                    b.ToTable("reservations", (string)null);
                });

            modelBuilder.Entity("PlayOfferService.Models.Member", b =>
                {
                    b.HasOne("PlayOfferService.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_members_clubs_clubId");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("PlayOfferService.Models.PlayOffer", b =>
                {
                    b.HasOne("PlayOfferService.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_playOffers_clubs_clubId");

                    b.HasOne("PlayOfferService.Models.Member", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fK_playOffers_members_creatorId");

                    b.HasOne("PlayOfferService.Models.Member", "Opponent")
                        .WithMany()
                        .HasForeignKey("OpponentId")
                        .HasConstraintName("fK_playOffers_members_opponentId");

                    b.HasOne("PlayOfferService.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("fK_playOffers_reservations_reservationId");

                    b.Navigation("Club");

                    b.Navigation("Creator");

                    b.Navigation("Opponent");

                    b.Navigation("Reservation");
                });
#pragma warning restore 612, 618
        }
    }
}
